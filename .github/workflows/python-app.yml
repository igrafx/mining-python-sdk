# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: iGrafx Mining SDK

on:
  push:
    branches:
    - dev
    - release/*
  pull_request:
    branches:
    - dev
    - release/*
  schedule:
  - cron: "0 2 * * 1-5"

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Setup project
      run: |
        poetry config virtualenvs.create false

    - name: Install project dependencies
      run: |
        poetry install --no-root --no-dev

    - name: Install Flake8
      run: |
        poetry run pip install flake8

    - name: Install pytest
      run: |
        poetry run pip install pytest

    - name: Set environment variables
      run: |
        echo "WG_ID=${{ secrets.WG_ID }}" >> $GITHUB_ENV
        echo "WG_KEY=${{ secrets.WG_KEY }}" >> $GITHUB_ENV
        echo "WG_AUTH=${{ secrets.WG_AUTH }}" >> $GITHUB_ENV
        echo "WG_URL=${{ secrets.WG_URL }}" >> $GITHUB_ENV
        echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> $GITHUB_ENV
        echo "NAME=${{ secrets.NAME }}" >> $GITHUB_ENV
        echo "TYPE=${{ secrets.TYPE }}" >> $GITHUB_ENV
        echo "HOST=${{ secrets.HOST }}" >> $GITHUB_ENV
        echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV

    - name: Print environment variables
      run: |
        cat $GITHUB_ENV

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest
